<<<<<<< HEAD
# Generated by Django 4.2.7 on 2025-07-14 10:12

from django.conf import settings
=======
# Generated by Django 4.2.7 on 2025-03-29 09:18

>>>>>>> 17bcccaba7fb9cd976497db44b0d4a7bc8f1d078
from django.db import migrations, models
import django.db.models.deletion
import optimizer.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
<<<<<<< HEAD
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
=======
>>>>>>> 17bcccaba7fb9cd976497db44b0d4a7bc8f1d078
    ]

    operations = [
        migrations.CreateModel(
            name='CompositionRequirements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(storage=optimizer.models.OverwriteStorage(), upload_to='composition_requirements/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed', models.BooleanField(default=False)),
            ],
<<<<<<< HEAD
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('code', models.CharField(help_text='Short code for organization (e.g., ABC, XYZ)', max_length=10, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
=======
>>>>>>> 17bcccaba7fb9cd976497db44b0d4a7bc8f1d078
        ),
        migrations.CreateModel(
            name='ScrapData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(storage=optimizer.models.OverwriteStorage(), upload_to='scrap_data/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed', models.BooleanField(default=False)),
<<<<<<< HEAD
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scrap_data', to='optimizer.organization')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
=======
            ],
>>>>>>> 17bcccaba7fb9cd976497db44b0d4a7bc8f1d078
        ),
        migrations.CreateModel(
            name='OptimizationResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('result_data', models.JSONField(blank=True, null=True)),
                ('status', models.CharField(default='pending', max_length=20)),
                ('total_cost', models.FloatField(blank=True, null=True)),
                ('total_products', models.IntegerField(blank=True, null=True)),
                ('composition_requirements', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='optimizer.compositionrequirements')),
<<<<<<< HEAD
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optimization_results', to='optimizer.organization')),
                ('scrap_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='optimizer.scrapdata')),
            ],
            options={
                'ordering': ['-created_at'],
            },
=======
                ('scrap_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='optimizer.scrapdata')),
            ],
>>>>>>> 17bcccaba7fb9cd976497db44b0d4a7bc8f1d078
        ),
        migrations.CreateModel(
            name='OptimizationBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='pending', max_length=20)),
<<<<<<< HEAD
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optimization_batches', to='optimizer.organization')),
                ('result', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='optimizer.optimizationresult')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('organization', 'name')},
            },
        ),
        migrations.AddField(
            model_name='compositionrequirements',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='composition_requirements', to='optimizer.organization'),
        ),
        migrations.AddField(
            model_name='compositionrequirements',
            name='uploaded_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
=======
                ('result', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='optimizer.optimizationresult')),
            ],
>>>>>>> 17bcccaba7fb9cd976497db44b0d4a7bc8f1d078
        ),
        migrations.CreateModel(
            name='BatchProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=100)),
                ('amount', models.FloatField()),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='optimizer.optimizationbatch')),
            ],
        ),
<<<<<<< HEAD
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(blank=True, max_length=50, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='optimizer.organization')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('organization', 'employee_id')},
            },
        ),
=======
>>>>>>> 17bcccaba7fb9cd976497db44b0d4a7bc8f1d078
    ]
